{
  "name": "n8n",
  "private": true,
  "homepage": "https://n8n.io",
  "scripts": {
    "bootstrap": "lerna bootstrap --hoist --no-ci",
    "npm:push-packages": "cd packages/cli && npm publish && cd ../core && npm publish && cd ../design-system && npm publish && cd ../editor-ui && npm publish && cd ../nodes-base && npm publish && cd ../workflow && npm publish",
    "build": "lerna exec npm run build",
    "heroku-postbuild": "npm install -g lerna && npm install -g run-script-os && npm install -g @oclif/command && npm install && npm run bootstrap && npm run build && npm install --only=dev",
    "connect:heroku": "heroku ps:exec -a smartcloud1",
    "heroku:n8n-custom:build-local-push-and-release": "npm run docker:n8n-custom && npm run heroku:tag-n8n-custom && npm run heroku:push-n8n-custom && npm run heroku:release-n8n-custom",
    "heroku:container-login": "heroku container:login",
    "heroku:tag-n8n-custom": "docker tag n8n-custom:latest registry.heroku.com/smartcloud1/web",
    "heroku:push-n8n-custom": "docker push registry.heroku.com/smartcloud1/web && npm run docker:push-n8n-custom-to-docker-hub",
    "heroku:release-n8n-custom": "heroku container:release web -a smartcloud1",
    "docker:n8n-custom": "docker build -t n8n-custom -f docker/images/n8n-custom/Dockerfile .",
    "docker:tag-n8n-custom-to-docker-hub": "docker tag n8n-custom:latest rmaroun/lab:n8n-custom",
    "docker:push-n8n-custom-to-docker-hub": "npm run docker:tag-n8n-custom-to-docker-hub && docker push rmaroun/lab:n8n-custom",
    "dev": "lerna exec npm run dev --parallel",
    "clean:dist": "lerna exec -- rimraf ./dist",
    "format": "lerna exec npm run format",
    "lint": "lerna exec npm run lint",
    "lintfix": "lerna exec npm run lintfix",
    "optimize-svg": "find ./packages -name '*.svg' ! -name 'pipedrive.svg' -print0 | xargs -0 -P16 -L20 npx svgo",
    "start": "run-script-os",
    "start:default": "cd packages/cli/bin && ./n8n",
    "start:windows": "cd packages/cli/bin && n8n",
    "test": "lerna run test",
    "watch": "lerna run --parallel watch",
    "webhook": "./packages/cli/bin/n8n webhook",
    "worker": "./packages/cli/bin/n8n worker",
    "clean": "rm -Rf node_modules build .cache package-lock.json"
  },
  "devDependencies": {
    "@oclif/command": "^1.8.16",
    "lerna": "^3.13.1",
    "rimraf": "^3.0.2",
    "run-script-os": "^1.0.7"
  },
  "engines": {
    "node": "14.x"
  },
  "postcss": {}
}
